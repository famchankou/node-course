/**
 * @define utilities
 * Size: breakpoint 2 (medium)
 */

 @media (--md-viewport) {

    /* Applies to flex container
       ======================================================================== */
  
    /**
     * Container
     */
  
    .u-md-flex {
      display: flex !important;
    }
  
    .u-md-flexInline {
      display: inline-flex !important;
    }
  
    /**
     * Direction: row
     */
  
    .u-md-flexRow {
      flex-direction: row !important;
    }
  
    .u-md-flexRowReverse {
      flex-direction: row-reverse !important;
    }
  
    /**
     * Direction: column
     */
  
    .u-md-flexCol {
      flex-direction: column !important;
    }
  
    .u-md-flexColReverse {
      flex-direction: column-reverse !important;
    }
  
    /**
     * Wrap
     */
  
    .u-md-flexWrap {
      flex-wrap: wrap !important;
    }
  
    .u-md-flexNoWrap {
      flex-wrap: nowrap !important;
    }
  
    .u-md-flexWrapReverse {
      flex-wrap: wrap-reverse !important;
    }
  
    /**
     * Align items along the main axis of the current line of the flex container
     */
  
    .u-md-flexJustifyStart {
      justify-content: flex-start !important;
    }
  
    .u-md-flexJustifyEnd {
      justify-content: flex-end !important;
    }
  
    .u-md-flexJustifyCenter {
      justify-content: center !important;
    }
  
    .u-md-flexJustifyBetween {
      justify-content: space-between !important;
    }
  
    .u-md-flexJustifyAround {
      justify-content: space-around !important;
    }
  
    /**
     * Align items in the cross axis of the current line of the flex container
     * Similar to `justify-content` but in the perpendicular direction
     */
  
    .u-md-flexAlignItemsStart {
      align-items: flex-start !important;
    }
  
    .u-md-flexAlignItemsEnd {
      align-items: flex-end !important;
    }
  
    .u-md-flexAlignItemsCenter {
      align-items: center !important;
    }
  
    .u-md-flexAlignItemsStretch {
      align-items: stretch !important;
    }
  
    .u-md-flexAlignItemsBaseline {
      align-items: baseline !important;
    }
  
    /**
     * Aligns items within the flex container when there is extra
     * space in the cross-axis
     *
     * Has no effect when there is only one line of flex items.
     */
  
    .u-md-flexAlignContentStart {
      align-content: flex-start !important;
    }
  
    .u-md-flexAlignContentEnd {
      align-content: flex-end !important;
    }
  
    .u-md-flexAlignContentCenter {
      align-content: center !important;
    }
  
    .u-md-flexAlignContentStretch {
      align-content: stretch !important;
    }
  
    .u-md-flexAlignContentBetween {
      align-content: space-between !important;
    }
  
    .u-md-flexAlignContentAround {
      align-content: space-around !important;
    }
  
    /* Applies to flex items
       ======================================================================== */
  
    /**
     * Override default alignment of single item when specified by `align-items`
     */
  
    .u-md-flexAlignSelfStart {
      align-self: flex-start !important;
    }
  
    .u-md-flexAlignSelfEnd {
      align-self: flex-end !important;
    }
  
    .u-md-flexAlignSelfCenter {
      align-self: center !important;
    }
  
    .u-md-flexAlignSelfStretch {
      align-self: stretch !important;
    }
  
    .u-md-flexAlignSelfBaseline {
      align-self: baseline !important;
    }
  
    .u-md-flexAlignSelfAuto {
      align-self: auto !important;
    }
  
    /**
     * Change order without editing underlying HTML
     */
  
    .u-md-flexOrderFirst {
      order: -1 !important;
    }
  
    .u-md-flexOrderLast {
      order: 1 !important;
    }
  
    .u-md-flexOrderNone {
      order: 0 !important;
    }
  
    /**
     * Specify the flex grow factor, which determines how much the flex item will
     * grow relative to the rest of the flex items in the flex container.
     *
     * Supports 1-5 proportions
     *
     * 1. Provide all values to avoid IE10 bug with shorthand flex
     *    http://git.io/vllC7
     *
     *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
     *    http://git.io/vllWx
     */
  
    .u-md-flexGrow1 {
      flex: 1 1 0% !important; /* 1 */
    }
  
    .u-md-flexGrow2 {
      flex: 2 1 0% !important;
    }
  
    .u-md-flexGrow3 {
      flex: 3 1 0% !important;
    }
  
    .u-md-flexGrow4 {
      flex: 4 1 0% !important;
    }
  
    .u-md-flexGrow5 {
      flex: 5 1 0% !important;
    }
  
    /**
     * Specify the flex shrink factor, which determines how much the flex item
     * will shrink relative to the rest of the flex items in the flex container.
     */
  
    .u-md-flexShrink0 {
      flex-shrink: 0 !important;
    }
  
    .u-md-flexShrink1 {
      flex-shrink: 1 !important;
    }
  
    .u-md-flexShrink2 {
      flex-shrink: 2 !important;
    }
  
    .u-md-flexShrink3 {
      flex-shrink: 3 !important;
    }
  
    .u-md-flexShrink4 {
      flex-shrink: 4 !important;
    }
  
    .u-md-flexShrink5 {
      flex-shrink: 5 !important;
    }
  
    /**
     * Aligning with `auto` margins
     * http://www.w3.org/TR/css-flexbox-1/#auto-margins
     */
  
    .u-md-flexExpand {
      margin: auto !important;
    }
  
    .u-md-flexExpandLeft {
      margin-left: auto !important;
    }
  
    .u-md-flexExpandRight {
      margin-right: auto !important;
    }
  
    .u-md-flexExpandTop {
      margin-top: auto !important;
    }
  
    .u-md-flexExpandBottom {
      margin-bottom: auto !important;
    }
  
    /**
     * Basis
     */
  
    .u-md-flexBasisAuto {
      flex-basis: auto !important;
    }
  
    .u-md-flexBasis0 {
      flex-basis: 0 !important;
    }
  
    /*
     * Shorthand
     *
     * Declares all values instead of keywords like 'initial' to work around IE10
     * https://www.w3.org/TR/css-flexbox-1/#flex-common
     *
     * 1. Fixes issue in IE 10 where flex-basis is ignored - https://git.io/vllMt
     *    This ensures it overrides flex-basis set in other utilities.
     */
  
    /*
     * Sizes the item based on the width/height properties
     */
  
    .u-md-flexInitial {
      flex: 0 1 auto !important;
      flex-basis: auto !important; /* 1 */
    }
  
    /*
     * Sizes the item based on the width/height properties, but makes them fully
     * flexible, so that they absorb any free space along the main axis.
     */
  
    .u-md-flexAuto {
      flex: 1 1 auto !important;
      flex-basis: auto !important; /* 1 */
    }
  
    /*
     * Sizes the item according to the width/height properties, but makes the flex
     * item fully inflexible. Similar to initial, except that flex items are
     * not allowed to shrink, even in overflow situations.
     */
  
    .u-md-flexNone {
      flex: 0 0 auto !important;
      flex-basis: auto !important; /* 1 */
    }
  
  }
